import { User } from "discord.js";
import { Track, ITrackData } from "../structures/Track";
import { Type } from "../entities/Utils";
/**
 * The IException interface
 */
export interface IException {
    /**
     * The message for the exception.
     */
    readonly message: string;
    /**
     * The severity of the exception.
     */
    readonly severity: string;
}
/**
 * The IPlaylist class.
 */
export interface IPlaylist {
    /**
     * The info for the playlist.
     */
    readonly info: IPlaylistInfo;
    /**
     * The tracks for the playlist.
     */
    readonly tracks: Track[];
}
/**
 * The playlists info.
 */
interface IPlaylistInfo {
    /**
     * The name of the playlist.
     */
    readonly name?: string;
    /**
     * The selected track of the playlist.
     */
    readonly selectedTrack?: ITrackData | null;
}
export interface ISearchResultData {
    readonly loadType: string;
    readonly playlistInfo: IPlaylistInfo;
    readonly tracks: ITrackData[];
    readonly exception?: IException;
}
/**
 * The SearchResult class.
 */
export declare class SearchResult {
    /**
     * The load type of the search result.
     */
    readonly loadType: string;
    /**
     * The tracks of the search result.
     */
    readonly tracks: Track[];
    /**
     * The playlist of the search result.
     */
    readonly playlist: IPlaylist;
    /**
     * The exception of the search result if one occurred.
     */
    readonly exception: IException | undefined;
    /**
     * Creates an instance of SearchResult.
     * @param {any} data - The search result data.
     * @param {Track} track - The Track class.
     * @param {User} user - The user who requested the track.
     */
    constructor(data: ISearchResultData, track: Type<Track>, user: User);
}
export {};
