import { Collection } from "discord.js";
import { Node } from "../structures/Node";
import { INodeOptions, ErelaClient } from "../ErelaClient";
/**
 * The NodeStore class.
 * @noInheritDoc
 */
export default class NodeStore extends Collection<number, Node> {
    private readonly erela;
    /**
     * Filters the connected nodes and sorts them by the amount of rest calls it has made.
     */
    get leastUsed(): Collection<number, Node>;
    /**
     * Filters the connected nodes and sorts them by the least resource usage.
     */
    get leastLoad(): Collection<number, Node>;
    /**
     * Creates an instance of NodeStore.
     * @param {ErelaClient} erela - The ErelaClient.
     * @param {Array<INodeOptions>} nodes - The INodeOptions array.
     */
    constructor(erela: ErelaClient, nodes: INodeOptions[]);
    /**
     * Adds a new Node.
     * @param {INodeOptions} node - The node options.
     * @param {object} [extra={}] - The nodes extra data to pass when extending for custom classes.
     */
    spawn(options: INodeOptions, extra?: object): void;
    /**
     * Removes a new Node.
     * @param {number} nodeId - The node ID.
     * @returns {(INode|null)} - The node that was removed, or null if it does not exist.
     */
    remove(nodeId: number): Node | null;
}
