import { User } from "discord.js";
/**
 * The ITrackInfo interface.
 */
export interface ITrackInfo {
    /**
     * The track's identifier.
     */
    readonly identifier: string;
    /**
     * Whether the track is seekable.
     */
    readonly isSeekable: boolean;
    /**
     * The author of the track.
     */
    readonly author: string;
    /**
     * The track's length.
     */
    readonly length: number;
    /**
     * Whether the track is a string.
     */
    readonly isStream: boolean;
    /**
     * The track's title.
     */
    readonly title: string;
    /**
     * The track's URI.
     */
    readonly uri: string;
}
/**
 * The ITrackData interface.
 */
export interface ITrackData {
    /**
     * The base 64 encoded track.
     */
    readonly track: string;
    /**
     * The tracks info.
     */
    readonly info: ITrackInfo;
}
/**
 * The Track class.
 * @export
 * @class Track
 */
export declare class Track {
    /**
     * The base 64 encoded track.
     */
    track: string;
    /**
     * The track's identifier.
     */
    identifier: string;
    /**
     * Whether the track is seekable.
     */
    isSeekable: boolean;
    /**
     * The author of the track.
     */
    author: string;
    /**
     * The track's duration.
     */
    duration: number;
    /**
     * Whether the track is a string.
     */
    isStream: boolean;
    /**
     * The track's title.
     */
    title: string;
    /**
     * The track's URI.
     */
    uri: string;
    /**
     * The track's thumbnail.
     */
    thumbnail: string;
    /**
     * The user who requested the track.
     */
    requester: User;
    /**
     * Creates an instance of Track.
     * @param {ITrackData} data - The data to pass.
     * @param {User} user - The user who requested the track.
     */
    constructor(data: ITrackData, user: User);
}
